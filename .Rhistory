+ infect + say + vaccine + spread + travel + panic + death + question + people,
data = regressionSetUp)
summary(reg2)
reg2 <- lm(trustIndicator ~ case + school + pandemic + lockdown + trump
+ infect + say + vaccine + spread + travel + death + question + people,
data = regressionSetUp)
summary(reg2)
reg2 <- lm(trustIndicator ~ case + school + pandemic + lockdown
+ infect + say + vaccine + spread + travel + death + question + people,
data = regressionSetUp)
summary(reg2)
reg2 <- lm(trustIndicator ~ case + school + pandemic + lockdown
+ infect + say + vaccine + spread + travel + question + people,
data = regressionSetUp)
summary(reg2)
reg2 <- lm(trustIndicator ~ case + school + pandemic + lockdown
+ infect + say + vaccine + travel + question + people,
data = regressionSetUp)
summary(reg2)
reg2 <- lm(trustIndicator ~ case + school + pandemic + lockdown
+ infect + say + vaccine + travel + people,
data = regressionSetUp)
summary(reg2)
reg2 <- lm(trustIndicator ~ school + pandemic + lockdown
+ infect + say + vaccine + travel + people,
data = regressionSetUp)
summary(reg2)
reg2 <- lm(trustIndicator ~ school + pandemic + lockdown
+ infect + say + travel + people,
data = regressionSetUp)
summary(reg2)
reg2 <- lm(trustIndicator ~ school + pandemic + lockdown
+ infect + say + travel,
data = regressionSetUp)
summary(reg2)
reg2 <- lm(trustIndicator ~ school + pandemic + lockdown
+ say + travel,
data = regressionSetUp)
summary(reg2)
#weight each count to their own level of emotion and create df
totalBefore = sum(sent4$countBefore)
totalAfter = sum(sent4$countAfter)
sent_BA <- sent4 %>%
mutate(weightedBefore = sent4[,2]/totalBefore) %>%
mutate(weightedAfter = sent4[,3]/totalAfter)
sent_BA <- sent_BA[,-which(names(sent_BA) %in% c("countBefore","countAfter"))]
meltBACount<-melt(sent4)
meltBAWeighted <- melt(sent_BA)
p <- ggplot(meltBACount, aes(emotion,value,fill=variable)) +
geom_bar(stat="identity",position="dodge")+
theme_minimal() +
theme(legend.position="right") +
labs( x = "Emotion", y = "Weighted Count") +
ggtitle("Sentiment of COVID Posts Before and After Global Pandemic (March 11)") +
theme(plot.title = element_text(hjust=0.5))
p
q <- ggplot(meltBAWeighted, aes(emotion,value,fill=variable)) +
geom_bar(stat="identity",position="dodge")+
theme_minimal() +
theme(legend.position="right") +
labs( x = "Emotion", y = "Weighted Count") +
ggtitle("Sentiment of COVID Posts Before and After Global Pandemic (March 11)") +
theme(plot.title = element_text(hjust=0.5))
q
regressionSetUp <- regressionSetUp %>%
mutate(trustIndicator =(rollsum(lead(positive-negative,default = 0), 10, fill = c(0), align = "left")))
#create responding variable of next 10 hours of sentiment:
regressionSetUp <- regressionSetUp %>%
mutate(sentiIndicator =(rollsum(lead(positive-negative,default = 0), 10, fill = c(0), align = "left")))
#run regression first time
initReg <- lm(trustIndicator ~ case + will + school + close + pandemic + lockdown + quarantine + trump
+ infect + say + vaccine + spread + travel + panic + death + restaurant + question + test + people,
data = regressionSetUp)
#run regression first time
initReg <- lm(trustIndicator ~ case + will + school + close + pandemic + confirm + lockdown +
quarantine + trump + infect + say + vaccine + spread + travel + panic +
death + restaurant + question + test + people,
data = regressionSetUp)
summary(initReg)
#run regression first time
initReg <- lm(sentiIndicator ~ case + will + school + close + pandemic + confirm + lockdown +
quarantine + trump + infect + say + vaccine + spread + travel + panic +
death + restaurant + question + test + people,
data = regressionSetUp)
summary(initReg)
#create responding variable of sum of next 10 hours of sentiment:
regressionSetUp <- regressionSetUp %>%
mutate(sentiIndicator =(rollsum(lead(positive-negative,default = 0), 5, fill = c(0), align = "left")))
#run regression first time
initReg <- lm(sentiIndicator ~ case + will + school + close + pandemic + confirm + lockdown +
quarantine + trump + infect + say + vaccine + spread + travel + panic +
death + restaurant + question + test + people,
data = regressionSetUp)
summary(initReg)
#create responding variable of sum of next 10 hours of sentiment:
regressionSetUp <- regressionSetUp %>%
mutate(sentiIndicator =(rollsum(lead(positive-negative,default = 0), 10, fill = c(0), align = "left")))
#run regression first time
initReg <- lm(sentiIndicator ~ case + will + school + close + pandemic + confirm + lockdown +
quarantine + trump + infect + say + vaccine + spread + travel + panic +
death + restaurant + question + test + people,
data = regressionSetUp)
summary(initReg)
#run regression multiple time deleting vars each time
reg2 <- lm(trustIndicator ~ case + will + school + close + pandemic + confirm + lockdown +
quarantine + trump + infect + say + vaccine + spread + travel + panic +
death + question + test + people,
data = regressionSetUp)
summary(reg2)
#run regression multiple time deleting vars each time
reg2 <- lm(trustIndicator ~ case + will + school + close + pandemic + confirm + lockdown +
quarantine + trump + infect + say + vaccine + spread + travel + panic +
death + question + test,
data = regressionSetUp)
summary(reg2)
#run regression multiple time deleting vars each time
reg2 <- lm(trustIndicator ~ case + will + school + close + pandemic + confirm + lockdown +
trump + infect + say + vaccine + spread + travel + panic +
death + question + test,
data = regressionSetUp)
summary(reg2)
#run regression multiple time deleting vars each time
reg2 <- lm(trustIndicator ~ case + will + school + close + pandemic + confirm + lockdown +
infect + say + vaccine + spread + travel + panic +
death + question + test,
data = regressionSetUp)
summary(reg2)
#run regression multiple time deleting vars each time
reg2 <- lm(trustIndicator ~ case + will + school + close + confirm + lockdown +
infect + say + vaccine + spread + travel + panic +
death + question + test,
data = regressionSetUp)
summary(reg2)
#run regression multiple time deleting vars each time
reg2 <- lm(trustIndicator ~ will + school + close + confirm + lockdown +
infect + say + vaccine + spread + travel + panic +
death + question + test,
data = regressionSetUp)
summary(reg2)
#run regression multiple time deleting vars each time
reg2 <- lm(trustIndicator ~ will + school + close + confirm + lockdown +
infect + say + vaccine + spread + travel +
death + question + test,
data = regressionSetUp)
summary(reg2)
#run regression multiple time deleting vars each time
reg2 <- lm(trustIndicator ~ will + school + confirm + lockdown +
infect + say + vaccine + spread + travel +
death + question + test,
data = regressionSetUp)
summary(reg2)
#run regression multiple time deleting vars each time
reg2 <- lm(trustIndicator ~ will + school + confirm + lockdown +
infect + say + vaccine + travel +
death + question + test,
data = regressionSetUp)
summary(reg2)
#run regression multiple time deleting vars each time
reg2 <- lm(trustIndicator ~ will + school + lockdown +
infect + say + vaccine + travel +
death + question + test,
data = regressionSetUp)
summary(reg2)
#run regression multiple time deleting vars each time
reg2 <- lm(trustIndicator ~ will + school + lockdown +
infect + say + vaccine + travel +
death + question,
data = regressionSetUp)
summary(reg2)
#run regression multiple time deleting vars each time
reg2 <- lm(trustIndicator ~ will + school + lockdown +
infect + say + vaccine + travel +
question,
data = regressionSetUp)
summary(reg2)
#run regression multiple time deleting vars each time
reg2 <- lm(trustIndicator ~ will + school + lockdown +
infect + say + vaccine + travel,
data = regressionSetUp)
summary(reg2)
people = hourly_cast$peopl, work = hourly_cast$work, home = hourly_cast$home,col.names = TRUE)
people = hourly_cast$peopl, work = hourly_cast$work, home = hourly_cast$home, col.names = TRUE)
#regression timee baybeeeee ----
#make sure to add to end of list:
regressionSetUp <- as.data.frame(cbind(date = hourly_cast_sentiment$dateX,fear = hourly_cast_sentiment$fear,trust = hourly_cast_sentiment$trust,
positive = hourly_cast_sentiment$positive,negative = hourly_cast_sentiment$negative,
case = hourly_cast$case,will = hourly_cast$will,school = hourly_cast$school,
close = hourly_cast$close,pandemic = hourly_cast$pandem,
confirm = hourly_cast$confirm,lockdown = hourly_cast$lockdown,
quarantine = hourly_cast$quarantin,trump = hourly_cast$trump, infect = hourly_cast$infect,
say = hourly_cast$say,vaccine = hourly_cast$vaccin,spread = hourly_cast$spread,
travel = hourly_cast$travel, panic = hourly_cast$panic, death = hourly_cast$death,
restaurant = hourly_cast$restaur,question = hourly_cast$question, test = hourly_cast$test,
people = hourly_cast$peopl, work = hourly_cast$work, home = hourly_cast$home) col.names = TRUE)
#regression timee baybeeeee ----
#make sure to add to end of list:
regressionSetUp <- as.data.frame(cbind(date = hourly_cast_sentiment$dateX,fear = hourly_cast_sentiment$fear,trust = hourly_cast_sentiment$trust,
positive = hourly_cast_sentiment$positive,negative = hourly_cast_sentiment$negative,
case = hourly_cast$case,will = hourly_cast$will,school = hourly_cast$school,
close = hourly_cast$close,pandemic = hourly_cast$pandem,
confirm = hourly_cast$confirm,lockdown = hourly_cast$lockdown,
quarantine = hourly_cast$quarantin,trump = hourly_cast$trump, infect = hourly_cast$infect,
say = hourly_cast$say,vaccine = hourly_cast$vaccin,spread = hourly_cast$spread,
travel = hourly_cast$travel, panic = hourly_cast$panic, death = hourly_cast$death,
restaurant = hourly_cast$restaur,question = hourly_cast$question, test = hourly_cast$test,
people = hourly_cast$peopl, work = hourly_cast$work, home = hourly_cast$home),col.names = TRUE)
#create a correlation matrix, will be used as part of the regression
corMatrix <- round(cor(regressionSetUp, method = "pearson", use = "pairwise.complete.obs"),2)
#eliminate the covariant variables, in this case, only 'confirm':
cleanCor <- regressionSetUp[-c(11)]
View(corMatrix)
#regression timee baybeeeee ----
#make sure to add to end of list:
regressionSetUp <- as.data.frame(cbind(date = hourly_cast_sentiment$dateX,fear = hourly_cast_sentiment$fear,trust = hourly_cast_sentiment$trust,
positive = hourly_cast_sentiment$positive,negative = hourly_cast_sentiment$negative,
case = hourly_cast$case,will = hourly_cast$will,school = hourly_cast$school,
close = hourly_cast$close,pandemic = hourly_cast$pandem,
confirm = hourly_cast$confirm,lockdown = hourly_cast$lockdown,
quarantine = hourly_cast$quarantin,trump = hourly_cast$trump, infect = hourly_cast$infect,
say = hourly_cast$say,vaccine = hourly_cast$vaccin,spread = hourly_cast$spread,
travel = hourly_cast$travel, panic = hourly_cast$panic, death = hourly_cast$death,
restaurant = hourly_cast$restaur,question = hourly_cast$question, test = hourly_cast$test,
people = hourly_cast$peopl, work = hourly_cast$work, home = hourly_cast$home),col.names = TRUE)
#create a correlation matrix, will be used as part of the regression
corMatrix <- round(cor(regressionSetUp, method = "pearson", use = "pairwise.complete.obs"),2)
#eliminate the covariant variables, in this case, only 'confirm' and 'close':
cleanCor <- regressionSetUp[-c(9,11)]
corMatrix2 <- round(cor(cleanCor, method = "pearson", use = "pairwise.complete.obs"),2)
#create responding variable of sum of next 10 hours of sentiment:
regressionSetUp <- regressionSetUp %>%
mutate(sentiIndicator =(rollsum(lead(positive-negative,default = 0), 10, fill = c(0), align = "left")))
#run regression first time
initReg <- lm(sentiIndicator ~ case + will + school + pandemic + confirm + lockdown +
quarantine + trump + infect + say + vaccine + spread + travel + panic +
death + restaurant + question + test + people + work + home,
data = regressionSetUp)
summary(initReg)
#run regression multiple time deleting vars each time
reg2 <- lm(trustIndicator ~ case + will + school + pandemic + confirm + lockdown +
quarantine + trump + infect + say + vaccine + spread + travel + panic +
death + question + test + people + work + home,
data = regressionSetUp)
summary(reg2)
#run regression first time
initReg <- lm(sentiIndicator ~ case + will + school + pandemic + confirm + lockdown +
quarantine + trump + infect + say + vaccine + spread + travel + panic +
death + restaurant + question + test + people + work + home,
data = regressionSetUp)
summary(initReg)
#run regression multiple time deleting vars each time
reg2 <- lm(sentiIndicator ~ case + will + school + pandemic + confirm + lockdown +
quarantine + trump + infect + say + vaccine + spread + travel + panic +
death + question + test + people + work + home,
data = regressionSetUp)
summary(reg2)
#run regression multiple time deleting vars each time
reg2 <- lm(sentiIndicator ~ case + will + school + pandemic + confirm + lockdown +
trump + infect + say + vaccine + spread + travel + panic +
death + question + test + people + work + home,
data = regressionSetUp)
summary(reg2)
#run regression multiple time deleting vars each time
reg2 <- lm(sentiIndicator ~ case + will + school + pandemic + confirm + lockdown +
trump + infect + say + vaccine + spread + travel +
death + question + test + people + work + home,
data = regressionSetUp)
summary(reg2)
#run regression multiple time deleting vars each time
reg2 <- lm(sentiIndicator ~ case + will + school + pandemic + confirm + lockdown +
infect + say + vaccine + spread + travel +
death + question + test + people + work + home,
data = regressionSetUp)
summary(reg2)
#run regression multiple time deleting vars each time
reg2 <- lm(sentiIndicator ~ case + will + school + pandemic + confirm + lockdown +
infect + say + vaccine + spread + travel +
death + question + test + work + home,
data = regressionSetUp)
summary(reg2)
#run regression multiple time deleting vars each time
reg2 <- lm(sentiIndicator ~ case + will + school + confirm + lockdown +
infect + say + vaccine + spread + travel +
death + question + test + work + home,
data = regressionSetUp)
summary(reg2)
#run regression multiple time deleting vars each time
reg2 <- lm(sentiIndicator ~ will + school + confirm + lockdown +
infect + say + vaccine + spread + travel +
death + question + test + work + home,
data = regressionSetUp)
summary(reg2)
#run regression multiple time deleting vars each time
reg2 <- lm(sentiIndicator ~ will + school + confirm + lockdown +
infect + say + vaccine + travel +
death + question + test + work + home,
data = regressionSetUp)
summary(reg2)
#run regression multiple time deleting vars each time
reg2 <- lm(sentiIndicator ~ will + school + lockdown +
infect + say + vaccine + travel +
death + question + test + work + home,
data = regressionSetUp)
summary(reg2)
#run regression first time
initReg <- lm(sentiIndicator ~ case + will + school + pandemic + lockdown +
quarantine + trump + infect + say + vaccine + spread + travel + panic +
death + restaurant + question + test + people + work + home,
data = regressionSetUp)
summary(initReg)
#run regression multiple time deleting vars each time
reg2 <- lm(sentiIndicator ~ case + will + school + pandemic + lockdown +
quarantine + trump + infect + say + vaccine + spread + travel + panic +
death + question + test + people + work + home,
data = regressionSetUp)
summary(reg2)
#run regression multiple time deleting vars each time
reg2 <- lm(sentiIndicator ~ will + school + pandemic + lockdown +
quarantine + trump + infect + say + vaccine + spread + travel + panic +
death + question + test + people + work + home,
data = regressionSetUp)
summary(reg2)
#run regression multiple time deleting vars each time
reg2 <- lm(sentiIndicator ~ will + school + pandemic + lockdown +
quarantine + trump + infect + say + vaccine + spread + travel + panic +
death + question + test + work + home,
data = regressionSetUp)
summary(reg2)
#run regression multiple time deleting vars each time
reg2 <- lm(sentiIndicator ~ will + school + pandemic + lockdown +
trump + infect + say + vaccine + spread + travel + panic +
death + question + test + work + home,
data = regressionSetUp)
summary(reg2)
#run regression multiple time deleting vars each time
reg2 <- lm(sentiIndicator ~ will + school + pandemic + lockdown +
infect + say + vaccine + spread + travel + panic +
death + question + test + work + home,
data = regressionSetUp)
summary(reg2)
#run regression multiple time deleting vars each time
reg2 <- lm(sentiIndicator ~ will + school + lockdown +
infect + say + vaccine + spread + travel + panic +
death + question + test + work + home,
data = regressionSetUp)
summary(reg2)
#run regression multiple time deleting vars each time
reg2 <- lm(sentiIndicator ~ will + school + lockdown +
infect + say + vaccine + spread + travel +
death + question + test + work + home,
data = regressionSetUp)
summary(reg2)
#run regression multiple time deleting vars each time
reg2 <- lm(sentiIndicator ~ will + school + lockdown +
infect + say + vaccine + travel +
death + question + test + work + home,
data = regressionSetUp)
summary(reg2)
#run regression multiple time deleting vars each time
reg2 <- lm(sentiIndicator ~ will + school + lockdown +
infect + say + vaccine + travel +
death + question + test + home,
data = regressionSetUp)
summary(reg2)
#run regression multiple time deleting vars each time
reg2 <- lm(sentiIndicator ~ will + school + lockdown +
infect + say + vaccine + travel +
death + question + home,
data = regressionSetUp)
summary(reg2)
#run regression multiple time deleting vars each time
reg2 <- lm(sentiIndicator ~ will + school + lockdown +
infect + say + vaccine + travel +
death + question,
data = regressionSetUp)
summary(reg2)
#run regression multiple time deleting vars each time
reg2 <- lm(sentiIndicator ~ will + school + lockdown +
infect + say + vaccine + travel +
question,
data = regressionSetUp)
summary(reg2)
#run regression multiple time deleting vars each time
reg2 <- lm(sentiIndicator ~ will + school + lockdown +
infect + say + vaccine + travel,
data = regressionSetUp)
summary(reg2)
#will run same words against trust indicator:
#create 10 day Average of subsequent trust:
regressionSetUp <- regressionSetUp %>%
mutate(trustIndicator =(rollmean(lead(trust,default = 0), 10, fill = c(0), align = "left")))
#run regression first time
initReg <- lm(trustIndicator ~ case + will + school + pandemic + lockdown +
quarantine + trump + infect + say + vaccine + spread + travel + panic +
death + restaurant + question + test + people + work + home,
data = regressionSetUp)
summary(initReg)
reg2 <- lm(trustIndicator ~ will + school + pandemic + lockdown +
quarantine + trump + infect + say + vaccine + spread + travel + panic +
death + restaurant + question + test + people + work + home,
data = regressionSetUp)
summary(reg2)
reg2 <- lm(trustIndicator ~ will + school + pandemic + lockdown +
quarantine + trump + infect + say + vaccine + spread + travel + panic +
death + restaurant + question + people + work + home,
data = regressionSetUp)
summary(reg2)
reg2 <- lm(trustIndicator ~ will + school + pandemic + lockdown +
trump + infect + say + vaccine + spread + travel + panic +
death + restaurant + question + people + work + home,
data = regressionSetUp)
summary(reg2)
reg2 <- lm(trustIndicator ~ will + school + pandemic + lockdown +
trump + infect + say + vaccine + spread + travel +
death + restaurant + question + people + work + home,
data = regressionSetUp)
summary(reg2)
#run regression first time
initReg <- lm(trustIndicator ~ case + will + school + pandemic + lockdown +
quarantine + trump + infect + say + vaccine + spread + travel +
death + restaurant + question + test + people + work + home,
data = regressionSetUp)
summary(initReg)
reg2 <- lm(trustIndicator ~ case + will + school + pandemic + lockdown +
quarantine + trump + infect + say + vaccine + spread + travel +
death + restaurant + question + people + work + home,
data = regressionSetUp)
summary(reg2)
reg2 <- lm(trustIndicator ~ will + school + pandemic + lockdown +
quarantine + trump + infect + say + vaccine + spread + travel +
death + restaurant + question + people + work + home,
data = regressionSetUp)
summary(reg2)
reg2 <- lm(trustIndicator ~ will + school + pandemic + lockdown +
quarantine + trump + infect + say + vaccine + travel +
death + restaurant + question + people + work + home,
data = regressionSetUp)
summary(reg2)
reg2 <- lm(trustIndicator ~ will + school + pandemic + lockdown +
trump + infect + say + vaccine + travel +
death + restaurant + question + people + work + home,
data = regressionSetUp)
summary(reg2)
reg2 <- lm(trustIndicator ~ school + pandemic + lockdown +
trump + infect + say + vaccine + travel +
death + restaurant + question + people + work + home,
data = regressionSetUp)
summary(reg2)
reg2 <- lm(trustIndicator ~ school + pandemic + lockdown +
infect + say + vaccine + travel +
death + restaurant + question + people + work + home,
data = regressionSetUp)
summary(reg2)
reg2 <- lm(trustIndicator ~ school + pandemic + lockdown +
infect + say + vaccine + travel +
death + restaurant + question + people + work,
data = regressionSetUp)
summary(reg2)
reg2 <- lm(trustIndicator ~ school + pandemic + lockdown +
infect + say + vaccine + travel +
restaurant + question + people + work,
data = regressionSetUp)
summary(reg2)
reg2 <- lm(trustIndicator ~ school + pandemic + lockdown +
infect + say + vaccine + travel +
restaurant + people + work,
data = regressionSetUp)
summary(reg2)
reg2 <- lm(trustIndicator ~ school + pandemic + lockdown +
say + vaccine + travel +
restaurant + people + work,
data = regressionSetUp)
summary(reg2)
reg2 <- lm(trustIndicator ~ school + pandemic + lockdown +
say + vaccine +
restaurant + people + work,
data = regressionSetUp)
summary(reg2)
reg2 <- lm(trustIndicator ~ school + pandemic + lockdown +
say + vaccine + travel +
restaurant + people + work,
data = regressionSetUp)
summary(reg2)
View(reddit)
View(emotion_before)
View(sent4)
View(sent2)
#compare the means of before and after to prove difference:
t.test(sent2$anger,sent3$anger)
#compare the means of before and after to prove difference:
t.test(sent2$anger,sent3$anger)
t.test(sent2$anticipation,sent3$anticipation)
t.test(sent2$disgust,sent3$disgust)
t.test(sent2$joy,sent3$joy)
t.test(sent2$sadness,sent3$sadness)
t.test(sent2$surprise,sent3$surprise)
t.test(sent2$trust,sent3$trust)
t.test(sent2$negative,sent3$negative)
t.test(sent2$positive,sent3$positive)
#compare the means of before and after to prove difference:
t.test(sent2$anger,sent3$anger)
t.test(sent2$anticipation,sent3$anticipation)
t.test(sent2$disgust,sent3$disgust)
t.test(sent2$disgust,sent3$disgust)
t.test(sent2$anticipation,sent3$anticipation)
t.test(sent2$joy,sent3$joy)
t.test(sent2$sadness,sent3$sadness)
t.test(sent2$surprise,sent3$surprise)
t.test(sent2$trust,sent3$trust)
t.test(sent2$negative,sent3$negative)
t.test(sent2$positive,sent3$positive)
t.test(sent2$negative,sent3$negative)
t.test(sent2$positive,sent3$positive)
